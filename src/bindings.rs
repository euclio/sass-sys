/* automatically generated by rust-bindgen */

pub const true_: ::std::os::raw::c_uint = 1;
pub const false_: ::std::os::raw::c_uint = 0;
pub const __bool_true_false_are_defined: ::std::os::raw::c_uint = 1;
pub const LIBSASS_VERSION: &'static [u8; 3usize] = b"na\x00";
pub const LIBSASS_LANGUAGE_VERSION: &'static [u8; 4usize] = b"3.4\x00";
pub const SASS2SCSS_PRETTIFY_0: ::std::os::raw::c_uint = 0;
pub const SASS2SCSS_PRETTIFY_1: ::std::os::raw::c_uint = 1;
pub const SASS2SCSS_PRETTIFY_2: ::std::os::raw::c_uint = 2;
pub const SASS2SCSS_PRETTIFY_3: ::std::os::raw::c_uint = 3;
pub const SASS2SCSS_KEEP_COMMENT: ::std::os::raw::c_uint = 32;
pub const SASS2SCSS_STRIP_COMMENT: ::std::os::raw::c_uint = 64;
pub const SASS2SCSS_CONVERT_COMMENT: ::std::os::raw::c_uint = 128;
pub type wchar_t = ::std::os::raw::c_int;
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum Sass_Output_Style {
    SASS_STYLE_NESTED = 0,
    SASS_STYLE_EXPANDED = 1,
    SASS_STYLE_COMPACT = 2,
    SASS_STYLE_COMPRESSED = 3,
    SASS_STYLE_INSPECT = 4,
    SASS_STYLE_TO_SASS = 5,
}
extern "C" {
    pub fn sass_alloc_memory(size: usize) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn sass_copy_c_string(str: *const ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_free_memory(ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn sass_string_quote(str: *const ::std::os::raw::c_char,
                             quote_mark: ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_string_unquote(str: *const ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_resolve_file(path: *const ::std::os::raw::c_char,
                             incs: *mut *const ::std::os::raw::c_char)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn libsass_version() -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn libsass_language_version() -> *const ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_Value([u8; 0]);
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum Sass_Tag {
    SASS_BOOLEAN = 0,
    SASS_NUMBER = 1,
    SASS_COLOR = 2,
    SASS_STRING = 3,
    SASS_LIST = 4,
    SASS_MAP = 5,
    SASS_NULL = 6,
    SASS_ERROR = 7,
    SASS_WARNING = 8,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum Sass_Separator { SASS_COMMA = 0, SASS_SPACE = 1, SASS_HASH = 2, }
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum Sass_OP {
    AND = 0,
    OR = 1,
    EQ = 2,
    NEQ = 3,
    GT = 4,
    GTE = 5,
    LT = 6,
    LTE = 7,
    ADD = 8,
    SUB = 9,
    MUL = 10,
    DIV = 11,
    MOD = 12,
    NUM_OPS = 13,
}
extern "C" {
    pub fn sass_make_null() -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_boolean(val: bool) -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_string(val: *const ::std::os::raw::c_char)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_qstring(val: *const ::std::os::raw::c_char)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_number(val: f64, unit: *const ::std::os::raw::c_char)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_color(r: f64, g: f64, b: f64, a: f64) -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_list(len: usize, sep: Sass_Separator) -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_map(len: usize) -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_error(msg: *const ::std::os::raw::c_char)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_make_warning(msg: *const ::std::os::raw::c_char)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_delete_value(val: *mut Sass_Value);
}
extern "C" {
    pub fn sass_clone_value(val: *const Sass_Value) -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_value_op(op: Sass_OP, a: *const Sass_Value,
                         b: *const Sass_Value) -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_value_stringify(a: *const Sass_Value, compressed: bool,
                                precision: ::std::os::raw::c_int)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_value_get_tag(v: *const Sass_Value) -> Sass_Tag;
}
extern "C" {
    pub fn sass_value_is_null(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_value_is_number(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_value_is_string(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_value_is_boolean(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_value_is_color(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_value_is_list(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_value_is_map(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_value_is_error(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_value_is_warning(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_number_get_value(v: *const Sass_Value) -> f64;
}
extern "C" {
    pub fn sass_number_set_value(v: *mut Sass_Value, value: f64);
}
extern "C" {
    pub fn sass_number_get_unit(v: *const Sass_Value)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_number_set_unit(v: *mut Sass_Value,
                                unit: *mut ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_string_get_value(v: *const Sass_Value)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_string_set_value(v: *mut Sass_Value,
                                 value: *mut ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_string_is_quoted(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_string_set_quoted(v: *mut Sass_Value, quoted: bool);
}
extern "C" {
    pub fn sass_boolean_get_value(v: *const Sass_Value) -> bool;
}
extern "C" {
    pub fn sass_boolean_set_value(v: *mut Sass_Value, value: bool);
}
extern "C" {
    pub fn sass_color_get_r(v: *const Sass_Value) -> f64;
}
extern "C" {
    pub fn sass_color_set_r(v: *mut Sass_Value, r: f64);
}
extern "C" {
    pub fn sass_color_get_g(v: *const Sass_Value) -> f64;
}
extern "C" {
    pub fn sass_color_set_g(v: *mut Sass_Value, g: f64);
}
extern "C" {
    pub fn sass_color_get_b(v: *const Sass_Value) -> f64;
}
extern "C" {
    pub fn sass_color_set_b(v: *mut Sass_Value, b: f64);
}
extern "C" {
    pub fn sass_color_get_a(v: *const Sass_Value) -> f64;
}
extern "C" {
    pub fn sass_color_set_a(v: *mut Sass_Value, a: f64);
}
extern "C" {
    pub fn sass_list_get_length(v: *const Sass_Value) -> usize;
}
extern "C" {
    pub fn sass_list_get_separator(v: *const Sass_Value) -> Sass_Separator;
}
extern "C" {
    pub fn sass_list_set_separator(v: *mut Sass_Value, value: Sass_Separator);
}
extern "C" {
    pub fn sass_list_get_value(v: *const Sass_Value, i: usize)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_list_set_value(v: *mut Sass_Value, i: usize,
                               value: *mut Sass_Value);
}
extern "C" {
    pub fn sass_map_get_length(v: *const Sass_Value) -> usize;
}
extern "C" {
    pub fn sass_map_get_key(v: *const Sass_Value, i: usize)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_map_set_key(v: *mut Sass_Value, i: usize,
                            arg1: *mut Sass_Value);
}
extern "C" {
    pub fn sass_map_get_value(v: *const Sass_Value, i: usize)
     -> *mut Sass_Value;
}
extern "C" {
    pub fn sass_map_set_value(v: *mut Sass_Value, i: usize,
                              arg1: *mut Sass_Value);
}
extern "C" {
    pub fn sass_error_get_message(v: *const Sass_Value)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_error_set_message(v: *mut Sass_Value,
                                  msg: *mut ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_warning_get_message(v: *const Sass_Value)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_warning_set_message(v: *mut Sass_Value,
                                    msg: *mut ::std::os::raw::c_char);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_Import([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_Options([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_Compiler([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_Importer([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_Function([u8; 0]);
pub type Sass_Import_Entry = *mut Sass_Import;
pub type Sass_Import_List = *mut *mut Sass_Import;
pub type Sass_Importer_Entry = *mut Sass_Importer;
pub type Sass_Importer_List = *mut *mut Sass_Importer;
pub type Sass_Importer_Fn =
    ::std::option::Option<unsafe extern "C" fn(url:
                                                   *const ::std::os::raw::c_char,
                                               cb: Sass_Importer_Entry,
                                               compiler: *mut Sass_Compiler)
                              -> Sass_Import_List>;
pub type Sass_Function_Entry = *mut Sass_Function;
pub type Sass_Function_List = *mut *mut Sass_Function;
pub type Sass_Function_Fn =
    ::std::option::Option<unsafe extern "C" fn(arg1: *const Sass_Value,
                                               cb: Sass_Function_Entry,
                                               compiler: *mut Sass_Compiler)
                              -> *mut Sass_Value>;
extern "C" {
    pub fn sass_make_importer_list(length: usize) -> Sass_Importer_List;
}
extern "C" {
    pub fn sass_importer_get_list_entry(list: Sass_Importer_List, idx: usize)
     -> Sass_Importer_Entry;
}
extern "C" {
    pub fn sass_importer_set_list_entry(list: Sass_Importer_List, idx: usize,
                                        entry: Sass_Importer_Entry);
}
extern "C" {
    pub fn sass_make_importer(importer: Sass_Importer_Fn, priority: f64,
                              cookie: *mut ::std::os::raw::c_void)
     -> Sass_Importer_Entry;
}
extern "C" {
    pub fn sass_importer_get_function(cb: Sass_Importer_Entry)
     -> Sass_Importer_Fn;
}
extern "C" {
    pub fn sass_importer_get_priority(cb: Sass_Importer_Entry) -> f64;
}
extern "C" {
    pub fn sass_importer_get_cookie(cb: Sass_Importer_Entry)
     -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn sass_delete_importer(cb: Sass_Importer_Entry);
}
extern "C" {
    pub fn sass_make_import_list(length: usize) -> Sass_Import_List;
}
extern "C" {
    pub fn sass_make_import_entry(path: *const ::std::os::raw::c_char,
                                  source: *mut ::std::os::raw::c_char,
                                  srcmap: *mut ::std::os::raw::c_char)
     -> Sass_Import_Entry;
}
extern "C" {
    pub fn sass_make_import(imp_path: *const ::std::os::raw::c_char,
                            abs_base: *const ::std::os::raw::c_char,
                            source: *mut ::std::os::raw::c_char,
                            srcmap: *mut ::std::os::raw::c_char)
     -> Sass_Import_Entry;
}
extern "C" {
    pub fn sass_import_set_error(import: Sass_Import_Entry,
                                 message: *const ::std::os::raw::c_char,
                                 line: usize, col: usize)
     -> Sass_Import_Entry;
}
extern "C" {
    pub fn sass_import_set_list_entry(list: Sass_Import_List, idx: usize,
                                      entry: Sass_Import_Entry);
}
extern "C" {
    pub fn sass_import_get_list_entry(list: Sass_Import_List, idx: usize)
     -> Sass_Import_Entry;
}
extern "C" {
    pub fn sass_import_get_imp_path(arg1: Sass_Import_Entry)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_import_get_abs_path(arg1: Sass_Import_Entry)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_import_get_source(arg1: Sass_Import_Entry)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_import_get_srcmap(arg1: Sass_Import_Entry)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_import_take_source(arg1: Sass_Import_Entry)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_import_take_srcmap(arg1: Sass_Import_Entry)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_import_get_error_line(arg1: Sass_Import_Entry) -> usize;
}
extern "C" {
    pub fn sass_import_get_error_column(arg1: Sass_Import_Entry) -> usize;
}
extern "C" {
    pub fn sass_import_get_error_message(arg1: Sass_Import_Entry)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_delete_import_list(arg1: Sass_Import_List);
}
extern "C" {
    pub fn sass_delete_import(arg1: Sass_Import_Entry);
}
extern "C" {
    pub fn sass_make_function_list(length: usize) -> Sass_Function_List;
}
extern "C" {
    pub fn sass_make_function(signature: *const ::std::os::raw::c_char,
                              cb: Sass_Function_Fn,
                              cookie: *mut ::std::os::raw::c_void)
     -> Sass_Function_Entry;
}
extern "C" {
    pub fn sass_function_get_list_entry(list: Sass_Function_List, pos: usize)
     -> Sass_Function_Entry;
}
extern "C" {
    pub fn sass_function_set_list_entry(list: Sass_Function_List, pos: usize,
                                        cb: Sass_Function_Entry);
}
extern "C" {
    pub fn sass_function_get_signature(cb: Sass_Function_Entry)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_function_get_function(cb: Sass_Function_Entry)
     -> Sass_Function_Fn;
}
extern "C" {
    pub fn sass_function_get_cookie(cb: Sass_Function_Entry)
     -> *mut ::std::os::raw::c_void;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_Context([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_File_Context([u8; 0]);
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Sass_Data_Context([u8; 0]);
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum Sass_Compiler_State {
    SASS_COMPILER_CREATED = 0,
    SASS_COMPILER_PARSED = 1,
    SASS_COMPILER_EXECUTED = 2,
}
extern "C" {
    pub fn sass_make_options() -> *mut Sass_Options;
}
extern "C" {
    pub fn sass_make_file_context(input_path: *const ::std::os::raw::c_char)
     -> *mut Sass_File_Context;
}
extern "C" {
    pub fn sass_make_data_context(source_string: *mut ::std::os::raw::c_char)
     -> *mut Sass_Data_Context;
}
extern "C" {
    pub fn sass_compile_file_context(ctx: *mut Sass_File_Context)
     -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sass_compile_data_context(ctx: *mut Sass_Data_Context)
     -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sass_make_file_compiler(file_ctx: *mut Sass_File_Context)
     -> *mut Sass_Compiler;
}
extern "C" {
    pub fn sass_make_data_compiler(data_ctx: *mut Sass_Data_Context)
     -> *mut Sass_Compiler;
}
extern "C" {
    pub fn sass_compiler_parse(compiler: *mut Sass_Compiler)
     -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sass_compiler_execute(compiler: *mut Sass_Compiler)
     -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sass_delete_compiler(compiler: *mut Sass_Compiler);
}
extern "C" {
    pub fn sass_delete_options(options: *mut Sass_Options);
}
extern "C" {
    pub fn sass_delete_file_context(ctx: *mut Sass_File_Context);
}
extern "C" {
    pub fn sass_delete_data_context(ctx: *mut Sass_Data_Context);
}
extern "C" {
    pub fn sass_file_context_get_context(file_ctx: *mut Sass_File_Context)
     -> *mut Sass_Context;
}
extern "C" {
    pub fn sass_data_context_get_context(data_ctx: *mut Sass_Data_Context)
     -> *mut Sass_Context;
}
extern "C" {
    pub fn sass_context_get_options(ctx: *mut Sass_Context)
     -> *mut Sass_Options;
}
extern "C" {
    pub fn sass_file_context_get_options(file_ctx: *mut Sass_File_Context)
     -> *mut Sass_Options;
}
extern "C" {
    pub fn sass_data_context_get_options(data_ctx: *mut Sass_Data_Context)
     -> *mut Sass_Options;
}
extern "C" {
    pub fn sass_file_context_set_options(file_ctx: *mut Sass_File_Context,
                                         opt: *mut Sass_Options);
}
extern "C" {
    pub fn sass_data_context_set_options(data_ctx: *mut Sass_Data_Context,
                                         opt: *mut Sass_Options);
}
extern "C" {
    pub fn sass_option_get_precision(options: *mut Sass_Options)
     -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sass_option_get_output_style(options: *mut Sass_Options)
     -> Sass_Output_Style;
}
extern "C" {
    pub fn sass_option_get_source_comments(options: *mut Sass_Options)
     -> bool;
}
extern "C" {
    pub fn sass_option_get_source_map_embed(options: *mut Sass_Options)
     -> bool;
}
extern "C" {
    pub fn sass_option_get_source_map_contents(options: *mut Sass_Options)
     -> bool;
}
extern "C" {
    pub fn sass_option_get_source_map_file_urls(options: *mut Sass_Options)
     -> bool;
}
extern "C" {
    pub fn sass_option_get_omit_source_map_url(options: *mut Sass_Options)
     -> bool;
}
extern "C" {
    pub fn sass_option_get_is_indented_syntax_src(options: *mut Sass_Options)
     -> bool;
}
extern "C" {
    pub fn sass_option_get_indent(options: *mut Sass_Options)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_option_get_linefeed(options: *mut Sass_Options)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_option_get_input_path(options: *mut Sass_Options)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_option_get_output_path(options: *mut Sass_Options)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_option_get_plugin_path(options: *mut Sass_Options)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_option_get_include_path(options: *mut Sass_Options)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_option_get_source_map_file(options: *mut Sass_Options)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_option_get_source_map_root(options: *mut Sass_Options)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_option_get_c_headers(options: *mut Sass_Options)
     -> Sass_Importer_List;
}
extern "C" {
    pub fn sass_option_get_c_importers(options: *mut Sass_Options)
     -> Sass_Importer_List;
}
extern "C" {
    pub fn sass_option_get_c_functions(options: *mut Sass_Options)
     -> Sass_Function_List;
}
extern "C" {
    pub fn sass_option_set_precision(options: *mut Sass_Options,
                                     precision: ::std::os::raw::c_int);
}
extern "C" {
    pub fn sass_option_set_output_style(options: *mut Sass_Options,
                                        output_style: Sass_Output_Style);
}
extern "C" {
    pub fn sass_option_set_source_comments(options: *mut Sass_Options,
                                           source_comments: bool);
}
extern "C" {
    pub fn sass_option_set_source_map_embed(options: *mut Sass_Options,
                                            source_map_embed: bool);
}
extern "C" {
    pub fn sass_option_set_source_map_contents(options: *mut Sass_Options,
                                               source_map_contents: bool);
}
extern "C" {
    pub fn sass_option_set_source_map_file_urls(options: *mut Sass_Options,
                                                source_map_file_urls: bool);
}
extern "C" {
    pub fn sass_option_set_omit_source_map_url(options: *mut Sass_Options,
                                               omit_source_map_url: bool);
}
extern "C" {
    pub fn sass_option_set_is_indented_syntax_src(options: *mut Sass_Options,
                                                  is_indented_syntax_src:
                                                      bool);
}
extern "C" {
    pub fn sass_option_set_indent(options: *mut Sass_Options,
                                  indent: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_set_linefeed(options: *mut Sass_Options,
                                    linefeed: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_set_input_path(options: *mut Sass_Options,
                                      input_path:
                                          *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_set_output_path(options: *mut Sass_Options,
                                       output_path:
                                           *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_set_plugin_path(options: *mut Sass_Options,
                                       plugin_path:
                                           *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_set_include_path(options: *mut Sass_Options,
                                        include_path:
                                            *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_set_source_map_file(options: *mut Sass_Options,
                                           source_map_file:
                                               *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_set_source_map_root(options: *mut Sass_Options,
                                           source_map_root:
                                               *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_set_c_headers(options: *mut Sass_Options,
                                     c_headers: Sass_Importer_List);
}
extern "C" {
    pub fn sass_option_set_c_importers(options: *mut Sass_Options,
                                       c_importers: Sass_Importer_List);
}
extern "C" {
    pub fn sass_option_set_c_functions(options: *mut Sass_Options,
                                       c_functions: Sass_Function_List);
}
extern "C" {
    pub fn sass_context_get_output_string(ctx: *mut Sass_Context)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_get_error_status(ctx: *mut Sass_Context)
     -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sass_context_get_error_json(ctx: *mut Sass_Context)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_get_error_text(ctx: *mut Sass_Context)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_get_error_message(ctx: *mut Sass_Context)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_get_error_file(ctx: *mut Sass_Context)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_get_error_src(ctx: *mut Sass_Context)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_get_error_line(ctx: *mut Sass_Context) -> usize;
}
extern "C" {
    pub fn sass_context_get_error_column(ctx: *mut Sass_Context) -> usize;
}
extern "C" {
    pub fn sass_context_get_source_map_string(ctx: *mut Sass_Context)
     -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_get_included_files(ctx: *mut Sass_Context)
     -> *mut *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_get_included_files_size(ctx: *mut Sass_Context)
     -> usize;
}
extern "C" {
    pub fn sass_context_take_error_json(ctx: *mut Sass_Context)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_take_error_text(ctx: *mut Sass_Context)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_take_error_message(ctx: *mut Sass_Context)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_take_error_file(ctx: *mut Sass_Context)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_take_output_string(ctx: *mut Sass_Context)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_take_source_map_string(ctx: *mut Sass_Context)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_context_take_included_files(ctx: *mut Sass_Context)
     -> *mut *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass_compiler_get_state(compiler: *mut Sass_Compiler)
     -> Sass_Compiler_State;
}
extern "C" {
    pub fn sass_compiler_get_context(compiler: *mut Sass_Compiler)
     -> *mut Sass_Context;
}
extern "C" {
    pub fn sass_compiler_get_options(compiler: *mut Sass_Compiler)
     -> *mut Sass_Options;
}
extern "C" {
    pub fn sass_compiler_get_import_stack_size(compiler: *mut Sass_Compiler)
     -> usize;
}
extern "C" {
    pub fn sass_compiler_get_last_import(compiler: *mut Sass_Compiler)
     -> Sass_Import_Entry;
}
extern "C" {
    pub fn sass_compiler_get_import_entry(compiler: *mut Sass_Compiler,
                                          idx: usize) -> Sass_Import_Entry;
}
extern "C" {
    pub fn sass_option_push_plugin_path(options: *mut Sass_Options,
                                        path: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass_option_push_include_path(options: *mut Sass_Options,
                                         path: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn sass2scss(sass: *const ::std::os::raw::c_char,
                     options: ::std::os::raw::c_int)
     -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn sass2scss_version() -> *const ::std::os::raw::c_char;
}
